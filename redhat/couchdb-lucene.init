#!/bin/sh
#
# couchdb-lucene	This shell script takes care of starting and stopping couchdb-lucene
#
# chkconfig: - 80 20
# description: Full Text indexing for couchdb
# processname: couchdb-lucene.sh
# pidfile: /var/run/couchdb-lucene.sh
## config:  /etc/couchdb-lucene/couchdb-lucene.conf
#
#
# Portions from tomcat4.init by:
#
# Gomez Henri <hgomez@users.sourceforge.net>
# Keith Irwin <keith_irwin@non.hp.com>
# Nicolas Mailhot <nicolas.mailhot@one2team.com>
#
#


# Source function library.
. /etc/init.d/functions

[ -r /etc/java/java.conf ] && . /etc/java/java.conf
export JAVA_HOME

# Path to the couchdb-lucene launch script (direct don't use the wrapper)
COLUC_SCRIPT=/usr/bin/couchdb-lucene

# if COLUC_USER is not set, use couchdb-lucene
if [ -z "$COLUC_USER" ]; then
    COLUC_USER="lucouch"
fi
                                                                                                                                                             
# if COLUC_HOME is not set, use /usr/share/couchdb-lucene
if [ -z "$COLUC_HOME" ]; then
    COLUC_HOME="/tmp"
fi

if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=10
fi

if [ -z "$COLUC_PID" ]; then
    COLUC_PID=/var/run/couchdb-lucene.pid
fi


prog=couchdb-lucene
RETVAL=0

start() {

        if [ -f /var/lock/subsys/couchdb-lucene ] ; then
                if [ -f $COLUC_PID ]; then
                        read kpid < $COLUC_PID
                        if checkpid $kpid 2>&1; then
                                echo "process already running"
                                return -1
                        else
                                echo "lock file found but no process running for pid $kpid, continuing"
                        fi
                fi
        fi

    	echo -n $"Starting $prog: "
#	[ -x ${COLUC_HOME}/ext ] &&
#	  	rebuild-jar-repository -s ${COLUC_HOME}/ext

        if [ -x /etc/rc.d/init.d/functions ]; then
                daemon --user $COLUC_USER COLUC_PID=$COLUC_PID $COLUC_SCRIPT
        else
                su - $COLUC_USER -c "COLUC_PID=$COLUC_PID $COLUC_SCRIPT"
        fi

        RETVAL=$?
        [ $RETVAL = 0 ] && touch /var/lock/subsys/couchdb-lucene && success || failure
	echo
        return $RETVAL
}


stop() {
                                                                                                                                                             
    if [ -f /var/lock/subsys/couchdb-lucene ] ; then
    	echo -n $"Stopping $prog: "
        count=0;

        if [ -f $COLUC_PID ]; then

            read kpid < $COLUC_PID
            let kwait=$SHUTDOWN_WAIT

#           Try issuing SIGTERM

            kill -15 $kpid
            until [ `ps --pid $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
            do
#               echo "waiting for processes to exit";
                sleep 1
                let count=$count+1;
            done
                                                                                                                                                             
            if [ $count -gt $kwait ]; then
#               echo "killing processes which didn't stop after $SHUTDOWN_WAIT seconds"
                kill -9 $kpid
            fi
        fi
        rm -f /var/lock/subsys/couchdb-lucene $COLUC_PID
	success
    	echo
    fi
}



# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
	status -p $COLUC_PID couchdb-lucene
	;;
  restart|reload)
        stop
        sleep 2
        start
        ;;
  condrestart)
        if [ -f $COLUC_PID ] ; then
                stop
                start
        fi
        ;;
  *)
        echo "Usage: $0 {start|stop|status|restart|reload|condrestart}"
        exit 1
esac
                                                                                                                                                             
exit $RETVAL

#
#
# end
